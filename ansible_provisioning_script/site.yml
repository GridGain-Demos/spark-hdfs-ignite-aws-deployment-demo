---
- hosts: localhost
  gather_facts: False
  vars_files:
    - group_vars/common_settings
    - group_vars/aws_settings
    - group_vars/cloud_credentials
  roles:
    - role: ec2-start
      when: deployment_command == 'provision'
    - role: ec2-terminate
      when: deployment_command == 'terminate'

- hosts: launched
  vars_files:
    - group_vars/common_settings
    - group_vars/deployment_settings
    - group_vars/aws_settings
    - group_vars/cloud_credentials
  vars:
    ansible_ssh_private_key_file: "{{ ssh_root_private_key_file }}"
    ansible_user: "{{ ssh_root_user }}"
    local_binaries_archive_path: "{{ gridgain_binaries_path + '/gridgain-' + product_type + '-' + product_version + '.zip' }}"
    local_binaries_folder_path: "{{ gridgain_binaries_path + '/latest'}}"
    local_binaries_folder_path_new: "{{ gridgain_binaries_path + '/gridgain-' + product_type + '-' + product_version}}"
  gather_facts: True
  roles:
    - role: install-openjdk8-java
      when: deployment_command == 'provision'
    - role: install-additional-software
      when: deployment_command == 'provision'
    - role: create-gridgain-users
      when: deployment_command == 'provision'
    - role: update_system
      when: deployment_command == 'provision'
    - role: generate-gridgain-folders
      when: deployment_command == 'provision'
    - role: prepare-gridgain-binaries
      when: deployment_command == 'provision'
    - role: restart
      when: deployment_command == 'provision'

- hosts: launched
  vars_files:
    - group_vars/common_settings
    - group_vars/deployment_settings
    - group_vars/aws_settings
    - group_vars/cloud_credentials
  vars:
    ansible_ssh_private_key_file: "{{ ssh_root_private_key_file }}"
    ansible_user: "{{ gridgain_rw_user }}"
    version: "3.2.1"
    hadoop: "hadoop-{{ version }}"
    file: "{{ hadoop }}.tar.gz"
    url: "https://apache-mirror.rbc.ru/pub/apache/hadoop/common/{{ hadoop }}/{{ file }}"
    hadoop_home: "{{ usr_local }}/{{ hadoop }}"
    hadoop_conf_dir: "{{ hadoop_home }}/etc/hadoop"
    hadoop_log_dir: "/var/log"
    download: "/home/{{ gridgain_rw_user }}"
    usr_local: "/usr/local"
  gather_facts: True
  roles:
    - role: install-hdfs
      when: deployment_command == 'provision'

- hosts: launched
  vars_files:
    - group_vars/common_settings
    - group_vars/deployment_settings
    - group_vars/aws_settings
    - group_vars/cloud_credentials
  vars:
    ansible_ssh_private_key_file: "{{ ssh_root_private_key_file }}"
    ansible_user: "{{ gridgain_rw_user }}"
    hadoop_version: "3.2.1"
    spark_version: "2.4.4"
    hadoop: "hadoop-{{ hadoop_version }}"
    spark: "spark-{{ spark_version }}-bin-without-hadoop"
    file: "{{ spark }}.tgz"
    url: "https://archive.apache.org/dist/spark/spark-{{ spark_version }}/{{ file }}"
    hadoop_home: "{{ usr_local }}/{{ hadoop }}"
    hadoop_conf_dir: "{{ hadoop_home }}/etc/hadoop"
    hadoop_log_dir: "/var/log"
    spark_home: "{{ usr_local }}/{{ spark }}"
    spark_conf_dir: "{{ spark_home }}/conf"
    spark_log_dir: "/var/log"
    spark_worker_dir: "{{ spark_home }}/work"
    spark_events_dir: "/home/{{ gridgain_rw_user }}/spark-events"
    download: "/home/{{ gridgain_rw_user }}"
    usr_local: "/usr/local"
  gather_facts: True
  roles:
    - role: install-spark
      when: deployment_command == 'provision'
